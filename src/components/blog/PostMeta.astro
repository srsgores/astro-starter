---
import FormattedDate from "../FormattedDate.astro";
const {post, class: classes, ...props} = Astro.props;
const {datePublished, dateModified, title, author, tags} = post.data;
const hasTags = Array.isArray(tags) && tags.length;
import {SITE} from "@config";
const [firstName, lastName] = SITE.author.split(" ");
---

<dl class="post-meta" class:list={[classes]} {...props}>
	<dt class="published-label">Published</dt>
	<dd><FormattedDate date={datePublished} itemprop="datePublished"/></dd>
	<dt class="published-label">Last Updated</dt>
	<dd><FormattedDate date={dateModified} itemprop="dateModified"/></dd>
	{hasTags &&
		<dt class="tags-label">Tags</dt>
		<dd>
			<ul class="tags">
				{tags.map((tag) => (
					<li class="tag"><span role="presentation" class="tag-icon">üè∑Ô∏è</span>{tag}</li>
				))}
			</ul>
		</dd>
	}
	<dt class="author-label">Author</dt>
	<dd itemprop="author">{SITE.author}</dd>
	<dt class="visuallyhidden">Publisher</dt>
	<dd class="visuallyhidden" itemprop="publisher" itemtype="https://schema.org/Person" itemscope="">
		<span itemprop="givenName">${firstName}</span>
		<span itemprop="familyName">${lastName}</span>
	</dd>
</dl>

<style>
	.post-meta {
		display: grid;
		grid-template-columns: max-content 1fr;
		gap: 1rem;
		font-size: 0.98em;
	}
	.post-meta dt {
		font-weight: bold;
	}
	.tag {
		display: inline-block;
	}
	.tag + .tag {
		margin-inline-start: 1rem;
	}
	.tag-icon {
		margin-inline-end: 0.35em;
	}
</style>